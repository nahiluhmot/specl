(in-package #:specl-runner)

(defun run-tree (tree &optional (spaces ""))
  (dbind (desc test) (value tree)
    (if (null test)
      (format t "~A~A~%" spaces desc)
      (let ((result (funcall test)))
        (if (and (symbolp result) (string= 'pass result))
          (format t "~A~A~%" spaces desc)
          (format t "~AFAIL '~A': ~A~%" spaces desc result))))
    (mapcar (lambda (child)
              (run-tree child (concatenate 'string "  " spaces)))
            (tree-children tree))))

(defun run-all ()
  (run-tree *contexts*)
  t)
